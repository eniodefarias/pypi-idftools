#!/usr/bin/expect -f
#
# This Expect script was generated by autoexpect on Tue Jul 25 11:57:54 2023
# Expect and autoexpect were both written by Don Libes, NIST.
#
# Note that autoexpect does not guarantee a working script.  It
# necessarily has to guess about certain things.  Two reasons a script
# might fail are:
#
# 1) timing - A surprising number of programs (rn, ksh, zsh, telnet,
# etc.) and devices discard or ignore keystrokes that arrive "too
# quickly" after prompts.  If you find your new script hanging up at
# one spot, try adding a short sleep just before the previous send.
# Setting "force_conservative" to 1 (see below) makes Expect do this
# automatically - pausing briefly before sending each character.  This
# pacifies every program I know of.  The -c flag makes the script do
# this in the first place.  The -C flag allows you to define a
# character to toggle this mode off and on.

set force_conservative 0  ;# set to 1 to force conservative mode even if
			  ;# script wasn't run conservatively originally
if {$force_conservative} {
	set send_slow {1 .1}
	proc send {ignore arg} {
		sleep .1
		exp_send -s -- $arg
	}
}

#
# 2) differing output - Some programs produce different output each time
# they run.  The "date" command is an obvious example.  Another is
# ftp, if it produces throughput statistics at the end of a file
# transfer.  If this causes a problem, delete these patterns or replace
# them with wildcards.  An alternative is to use the -p flag (for
# "prompt") which makes Expect only look for the last line of output
# (i.e., the prompt).  The -P flag allows you to define a character to
# toggle this mode off and on.
#
# Read the man page for more info.
#
# -Don


#set user [exec /usr/bin/cat /home/enio/.pypi/.auth |/usr/bin/head -1]
#set pass [exec /usr/bin/cat /home/enio/.pypi/.auth |/usr/bin/tail -1]

#set user [exec cat ~/.pypi/.auth | cut -d":" -f1]
#set pass [exec cat ~/.pypi/.auth | cut -d":" -f2]

set myuser [exec whoami]
set user [lindex [split [exec cat /home/$myuser/.pypi/.auth] ":"] 0]
set pass [lindex [split [exec cat /home/$myuser/.pypi/.auth] ":"] 1]

set output2 [exec bash -c "rm -rf dist/ "]
puts $output2

set output [exec bash -c ".venv/bin/python3 setup.py sdist bdist_wheel"]
puts $output

set timeout -1
# exec 

spawn twine upload --skip-existing dist/*
match_max 100000
# expect -exact "Uploading distributions to https://upload.pypi.org/legacy/\r
# Enter your username: "

expect "Enter your username: "
send -- "$user\r"
# expect -exact "
# Enter your password: "
expect "Enter your password: "
send -- "$pass\r"
expect eof
